/**
 * LIO - Order Management API
 * API de gerenciamento de pedidos da LIO.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Body1 {
  
  @SerializedName("sku")
  private String sku = null;
  @SerializedName("skuType")
  private String skuType = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("unit_price")
  private Integer unitPrice = null;
  @SerializedName("quantity")
  private Integer quantity = null;
  public enum UnitOfMeasureEnum {
     EACH,  HOURS,  DAYS,  SECONDS,  CRATE_OF_12,  SIX_PACK,  GALLON,  LITRE, 
  };
  @SerializedName("unit_of_measure")
  private UnitOfMeasureEnum unitOfMeasure = null;
  @SerializedName("details")
  private String details = null;
  @SerializedName("created_at")
  private Date createdAt = null;
  @SerializedName("updated_at")
  private Date updatedAt = null;

  /**
   * SKU do produto - identificação única do produto, preferencialmente usando identificações do mercado para o produto, como: <br> - Universal Product Code (UPC),<br> - International Article Number (EAN),<br> - Global Trade Item Number (GTIN),<br> - Australian Product Number (APN),<br> - Outros.<br> Caso seu produto não tenha uma identificação global, utilize informe um ID único proprietário para esse produto.
   **/
  @ApiModelProperty(required = true, value = "SKU do produto - identificação única do produto, preferencialmente usando identificações do mercado para o produto, como: <br> - Universal Product Code (UPC),<br> - International Article Number (EAN),<br> - Global Trade Item Number (GTIN),<br> - Australian Product Number (APN),<br> - Outros.<br> Caso seu produto não tenha uma identificação global, utilize informe um ID único proprietário para esse produto.")
  public String getSku() {
    return sku;
  }
  public void setSku(String sku) {
    this.sku = sku;
  }

  /**
   * Tipo de SKU informado, por exemplo:<br> - PTY - para proprietário - ou seja, quando o SKU for sua identificação proprietária.<br> - UPC - Universal Product Code.<br> - EAN - International Article Number.<br> - GTIN - Global Trade Item Number.<br> - APN - Australian Product Number.
   **/
  @ApiModelProperty(required = true, value = "Tipo de SKU informado, por exemplo:<br> - PTY - para proprietário - ou seja, quando o SKU for sua identificação proprietária.<br> - UPC - Universal Product Code.<br> - EAN - International Article Number.<br> - GTIN - Global Trade Item Number.<br> - APN - Australian Product Number.")
  public String getSkuType() {
    return skuType;
  }
  public void setSkuType(String skuType) {
    this.skuType = skuType;
  }

  /**
   * Nome do produto.
   **/
  @ApiModelProperty(value = "Nome do produto.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Descrição do produto.
   **/
  @ApiModelProperty(value = "Descrição do produto.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * Valor unitário do produto. Exemplo: O valor de R$ 10,00 é representado como 1000.
   **/
  @ApiModelProperty(required = true, value = "Valor unitário do produto. Exemplo: O valor de R$ 10,00 é representado como 1000.")
  public Integer getUnitPrice() {
    return unitPrice;
  }
  public void setUnitPrice(Integer unitPrice) {
    this.unitPrice = unitPrice;
  }

  /**
   * Quantidade de itens. Caso não seja informado será considerado o valor 1.
   **/
  @ApiModelProperty(value = "Quantidade de itens. Caso não seja informado será considerado o valor 1.")
  public Integer getQuantity() {
    return quantity;
  }
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  /**
   * Unidade de medida.
   **/
  @ApiModelProperty(required = true, value = "Unidade de medida.")
  public UnitOfMeasureEnum getUnitOfMeasure() {
    return unitOfMeasure;
  }
  public void setUnitOfMeasure(UnitOfMeasureEnum unitOfMeasure) {
    this.unitOfMeasure = unitOfMeasure;
  }

  /**
   * Detalhes do produto.
   **/
  @ApiModelProperty(value = "Detalhes do produto.")
  public String getDetails() {
    return details;
  }
  public void setDetails(String details) {
    this.details = details;
  }

  /**
   * Data da criação/inclusão do item no pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)
   **/
  @ApiModelProperty(required = true, value = "Data da criação/inclusão do item no pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)")
  public Date getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Data da última atualização do item no pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)
   **/
  @ApiModelProperty(required = true, value = "Data da última atualização do item no pedido. A data deve estar no formato: YYYY-MM-DDThh:mm:ssZ (Exemplo: 20151020T13:13:29.000Z)")
  public Date getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Body1 body1 = (Body1) o;
    return (this.sku == null ? body1.sku == null : this.sku.equals(body1.sku)) &&
        (this.skuType == null ? body1.skuType == null : this.skuType.equals(body1.skuType)) &&
        (this.name == null ? body1.name == null : this.name.equals(body1.name)) &&
        (this.description == null ? body1.description == null : this.description.equals(body1.description)) &&
        (this.unitPrice == null ? body1.unitPrice == null : this.unitPrice.equals(body1.unitPrice)) &&
        (this.quantity == null ? body1.quantity == null : this.quantity.equals(body1.quantity)) &&
        (this.unitOfMeasure == null ? body1.unitOfMeasure == null : this.unitOfMeasure.equals(body1.unitOfMeasure)) &&
        (this.details == null ? body1.details == null : this.details.equals(body1.details)) &&
        (this.createdAt == null ? body1.createdAt == null : this.createdAt.equals(body1.createdAt)) &&
        (this.updatedAt == null ? body1.updatedAt == null : this.updatedAt.equals(body1.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sku == null ? 0: this.sku.hashCode());
    result = 31 * result + (this.skuType == null ? 0: this.skuType.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.unitPrice == null ? 0: this.unitPrice.hashCode());
    result = 31 * result + (this.quantity == null ? 0: this.quantity.hashCode());
    result = 31 * result + (this.unitOfMeasure == null ? 0: this.unitOfMeasure.hashCode());
    result = 31 * result + (this.details == null ? 0: this.details.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.updatedAt == null ? 0: this.updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Body1 {\n");
    
    sb.append("  sku: ").append(sku).append("\n");
    sb.append("  skuType: ").append(skuType).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  unitPrice: ").append(unitPrice).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  unitOfMeasure: ").append(unitOfMeasure).append("\n");
    sb.append("  details: ").append(details).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
